// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';

  /* Services */
  var app, app_name,
    slice = [].slice;

  app_name = "myApp";

  app = angular.module(app_name + ".services", []);

  app.service("appService", function() {
    var getCurrentUser, setCurrentUserData;
    this.currentUserData = {};
    setCurrentUserData = function(user) {
      return this.currentUserData = user;
    };
    getCurrentUser = function() {
      return currentUser;
    };
    return {
      currentUser: this.currentUserData,
      setCurrentUser: setCurrentUserData
    };
  });

  app.value('version', '0.1');

  'use strict';


  /* Filters */

  app_name = "myApp";

  app = angular.module(app_name + ".filters", []);

  app.filter('interpolate', [
    'version', function(version) {
      return function(text) {
        return String(text).replace(/\%VERSION\%/mg, version);
      };
    }
  ]);

  'use strict';


  /* Directives */

  app_name = "myApp";

  app = angular.module(app_name + ".directives", []);

  app.directive('appVersion', [
    'version', function(version) {
      return function(scope, element, attrs) {
        return element.text(version);
      };
    }
  ]);

  window.stoppingPropagation = function(callback) {
    return function(event) {
      event.stopPropagation();
      return callback(event);
    };
  };

  app.directive('ngTap', function() {
    return function(scope, element, attrs) {
      var tapping;
      tapping = false;
      element.bind('touchstart', stoppingPropagation(function(event) {
        return tapping = true;
      }));
      element.bind('touchmove', stoppingPropagation(function(event) {
        return tapping = false;
      }));
      return element.bind('touchend', stoppingPropagation(function(event) {
        if (tapping) {
          return scope.$apply(attrs['ngTap']);
        }
      }));
    };
  });

  'use strict';


  /* Controllers */

  app_name = "myApp";

  app = angular.module(app_name + ".controllers", ['ngMaterial', 'angular-underscore']);

  app.controller('myCtrl1', [
    '$scope', '$rootScope', '$http', '$location', 'appService', function($scope, $rootScope, $http, $location, appService) {
      var awardMedals, gold, numbers, res, rest, silver, vm;
      $scope.name = "view 1";
      $scope.items = ['Item 1', 'Item 2', 'Item 3'];
      gold = silver = rest = "unknown";
      vm = this;
      $scope.temp = "git commit test";
      awardMedals = function() {
        var first, others, second;
        first = arguments[0], second = arguments[1], others = 3 <= arguments.length ? slice.call(arguments, 2) : [];
        gold = first;
        silver = second;
        return rest = others;
      };
      $scope.say = function() {
        return window.alert.apply(window, arguments);
      };
      res = $http.get("https://api.github.com/users");
      res.then(function(result) {
        console.log(result.data);
        $scope.data = result.data;
        return awardMedals.apply(null, (function() {
          var i, len, ref, results;
          ref = result.data;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            result = ref[i];
            results.push(result.login);
          }
          return results;
        })());
      }, function(error) {
        return console.log("error", error);
      });
      console.log(_.every([2, 4, 6], function(num) {
        return num % 2 === 0;
      }));
      numbers = [10, 5, 100, 2, 1000];
      console.log(_.min(numbers));
      console.log($scope.sample([1, 2, 3]));
      console.log($scope._([1, 2, 3]));
      return $scope.go = function(path, user) {
        $rootScope.USER = user;
        appService.setCurrentUser(user);
        return $location.path(path);
      };
    }
  ]);

  app.controller('myCtrl2', [
    '$scope', '$rootScope', '$http', 'appService', function($scope, $rootScope, $http, appService) {
      var res;
      $scope.user = $rootScope.USER;
      console.log("dsdssd", appService.currentUser);
      res = $http.get($rootScope.USER.url);
      return res.then(function(result) {
        console.log(result.data, "result");
        return $scope.user = result.data;
      }, function(error) {
        return console.log("error", error);
      });
    }
  ]);

  'use strict';


  /* Declare app level module which depends on filters, and services */

  app_name = "myApp";

  app = angular.module(app_name, ["ngRoute", app_name + ".filters", app_name + ".services", app_name + ".directives", app_name + ".controllers"]);

  app.config([
    '$routeProvider', function($routeProvider) {
      $routeProvider.when('/view1', {
        templateUrl: 'partials/partial1.html',
        controller: 'myCtrl1',
        controllerAs: 'vm'
      });
      $routeProvider.when('/view2/:URL', {
        templateUrl: 'partials/partial2.html',
        controller: 'myCtrl2',
        controllerAs: 'vm'
      });
      return $routeProvider.otherwise({
        redirectTo: '/view1'
      });
    }
  ]);

  angular.bootstrap(document, [app_name]);

}).call(this);
